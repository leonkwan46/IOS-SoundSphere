name: iOS CI Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build, Test and Run App in Simulator
    runs-on: macos-13

    steps:
      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.2'

      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode version
        run: sudo xcode-select -s /Applications/Xcode_15.3.app

      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default > default
          echo "Using default scheme: $default"

      - name: Build .app for Simulator
        run: |
          scheme=$(cat default)
          file_to_build=$(ls *.xcworkspace 2>/dev/null || ls *.xcodeproj)
          file_flag="workspace"
          if [[ $file_to_build == *.xcodeproj ]]; then file_flag="project"; fi

          xcodebuild -scheme "$scheme" \
            -"$file_flag" "$file_to_build" \
            -sdk iphonesimulator \
            -configuration Debug \
            -destination 'platform=iOS Simulator,name=iPhone 15' \
            -derivedDataPath build

      - name: Boot simulator and install + launch app
        run: |
          UDID=$(xcrun simctl list devices available | grep 'iPhone 15 (' | head -n1 | awk -F '[()]' '{print $2}')
          xcrun simctl boot "$UDID" || echo "Simulator already booted"

          APP_PATH=$(find build/Build/Products/Debug-iphonesimulator -name "*.app" | head -n1)
          echo "Installing app: $APP_PATH"
          xcrun simctl install "$UDID" "$APP_PATH"

          # Replace with your app's actual bundle identifier
          BUNDLE_ID=$(defaults read "$APP_PATH/Info.plist" CFBundleIdentifier)
          echo "Launching app with bundle ID: $BUNDLE_ID"
          xcrun simctl launch "$UDID" "$BUNDLE_ID"
